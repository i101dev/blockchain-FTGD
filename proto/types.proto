syntax = "proto3";

option go_package = "./proto";

service Node {
    rpc Handshake(Version) returns (Version);
    rpc HandleTX(Transaction) returns (Ack);
}

message Ack{}
message Version {
    string listenAddr = 1;
    string version = 2;
    int32 height = 3;
    repeated string peerList = 4;
}

message Block {
    Header header = 1;
    bytes publicKey = 2;
    bytes signature = 3;
    repeated Transaction transactions = 4;
}

// Sometimes you don't want to send everything to a node
// Sometimes you only want to send a header - ex. verification, validation, etc
// If hashing a block, usually just the header, rather than entire block
message Header {
    int32 version = 1;
    int32 height = 2;
    bytes prevHash = 3;
    bytes rootHash = 4; // merkle root for all transactions in block
    int64 timestamp = 5;
}

message TxInput {

    // hash for the previous [TX] - contains the output we want to spend
    bytes prevTxHash = 1;

    // index of the output of the previous [TX] we want to spend
    uint32 prevOutIndex = 2;

    // the public key of the transaction sender
    bytes pubKey = 3;
    bytes signature = 4;
}

message TxOutput {

    uint64 amount = 1;

    // the new owner of the respective output [amount]
    bytes address = 2;
}

message Transaction {
    int32 version = 1;
    repeated TxInput inputs = 2;
    repeated TxOutput outputs = 3;
}